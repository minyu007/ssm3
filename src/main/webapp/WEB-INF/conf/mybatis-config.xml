<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd"
	default-autowire="byName">
	
	<context:annotation-config />
	
	<context:property-placeholder location="classpath*:mybatis.properties"
		ignore-unresolvable="true" />

	<!-- beware that mapper-config.xml is not needed if you use injected mappers -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:mybatisMapper/**/*.xml" />
	</bean>
	
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/next_menu" />
		<property name="username" value="root"></property>
		<property name="password" value="root"></property>
	</bean>

	<!-- or you can scan for mappers and then inject them -->
	<bean class="org.mybatis.spring.annotation.MapperScannerPostProcessor">
		<property name="basePackage" value="com.nextmenu" />
	</bean>
	<bean id="userDao"
		class="com.nextmenu.apps.dao.impl.UserDaoImpl"></bean>

</beans>