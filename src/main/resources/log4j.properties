#log4j配置文件有三个主要的组件：Logger，Appender和Layout，分别为日志类型，日志输出目的地，日志输出格式。 
#log4j.rootLogger = [level], appenderName, appenderName, ... (level是错误级别，appenderName是输出目的地，可以定义多个) 
#level优先级分别为FATAL、ERROR、WARN、INFO、DEBUG 5个级别.通过定义的级别,你可以控制程序中的日志输出.比如在这里定义了ERROR级别,程序中只有FARAL、ERROR 级别的LOG会被输出. 
#log4j.appender.mylog= 输出目的地 (这里的appenderName是在前面定义的,可任意起名) 

#开发环境下[level]建议设置为INFO,上线环境[level]
#STANDARD表示输出目的地变量名与下面log4j.appender.STANDARD=org.apache.log4j.ConsoleAppender对应
#如果向控制台和文件同时输出需要设置为log4j.rootLogger=INFO,STANDARD,ROLLING_FILE
log4j.rootLogger=INFO,STANDARD

#
log4j.addivity.org.apache=true

#输出目的地类型,Log4j提供的输出目的地有以下几种: 
#org.apache.log4j.ConsoleAppender(控制台) 
#org.apache.log4j.FileAppender(文件) 
#org.apache.log4j.DailyRollingFileAppender(每天产生一个日志文件) 
#org.apache.log4j.RollingFileAppender(文件到达指定大小时产生一个新文件) 
#org.apache.log4j.WriterAppender(将日志信息以流格式发送到任何地方)
log4j.appender.STANDARD=org.apache.log4j.ConsoleAppender

#设置布局类型,Log4j提供的layout有以下4种： 
#org.apache.log4j.HTMLLayout(以HTML表格形式布局) 
#org.apache.log4j.SimpleLayout(包含日志信息的级别和信息字符串) 
#org.apache.log4j.TTCCLayout(包含日志产生的时间、线程、类别等等信息) 
#org.apache.log4j.PatternLayout(可以灵活地指定布局模式) 
log4j.appender.STANDARD.layout=org.apache.log4j.PatternLayout

#设置打印参数,如果使用PatternLayout布局就要指定的打印信息的具体格式ConversionPattern,打印参数如下： 
#%m 输出代码中指定的消息 
#%p 输出优先级,即DEBUG，INFO，WARN，ERROR，FATAL 
#%r 输出自应用启动到输出该log信息耗费的毫秒数 
#%c 输出所属的类目,通常就是所在类的全名 
#%t 输出产生该日志事件的线程名 
#%n 输出一个回车换行符,Windows为"rn"，Unix为"n" 
#%d 输出日志时间,比如:%d{yyyy MMM dd HH:mm:ss,SSS},输出:2007年5月17日 19:30:00,000 
#%l 输出日志事件的发生位置,包括类目名、发生的线程,以及在代码中的行数
log4j.appender.STANDARD.layout.ConversionPattern=%-5p\: %d{ISO8601}\: %C{1}[line\:%L}\: %m%n

#log4j.appender.filelog.File=your file dir 
#log4j.appender.filelog.MaxFileSize=your filesize 
#log4j.appender.mylog.MaxBackupIndex=num设置保存备份文件数量
log4j.appender.ROLLING_FILE=org.apache.log4j.RollingFileAppender
log4j.appender.ROLLING_FILE.File=/e113.log
log4j.appender.ROLLING_FILE.Append=true
log4j.appender.ROLLING_FILE.MaxFileSize=500KB
log4j.appender.ROLLING_FILE.MaxBackupIndex=1
log4j.logger.org.hibernate.cache=debug
log4j.appender.ROLLING_FILE.layout=org.apache.log4j.PatternLayout
log4j.appender.ROLLING_FILE.layout.ConversionPattern=[framework] %d - %c -%-4r [%t] %-5p %c %x - %m%n